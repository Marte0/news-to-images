"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FetchArgs = void 0;
// PACKAGES
var class_validator_1 = require("class-validator");
// ENUMS
var Resources_1 = require("../../enums/Resources");
// MODELS
var TweetFilter_1 = require("../payloads/TweetFilter");
var DataValidationError_1 = require("../errors/DataValidationError");
/**
 * User set query parameters that are used to specify the data that is to be fetched.
 *
 * @public
 */
var FetchArgs = exports.FetchArgs = /** @class */ (function () {
    /**
     * @param resourceType - The type of resource that is requested.
     * @param args - The additional user-defined arguments for fetching the resource.
     */
    function FetchArgs(resourceType, args) {
        var _a;
        this.id = args.id;
        this.count = (_a = args.count) !== null && _a !== void 0 ? _a : 20;
        this.cursor = args.cursor;
        /**
         * Initializing filter only if resource type is TWEET_SEARCH
         */
        if (resourceType == Resources_1.EResourceType.TWEET_SEARCH && args.filter) {
            this.filter = new TweetFilter_1.TweetFilter(args.filter);
        }
        // Validating this object
        var validationResult = (0, class_validator_1.validateSync)(this, { groups: [resourceType] });
        // If valiation error occured
        if (validationResult.length) {
            throw new DataValidationError_1.DataValidationError(validationResult);
        }
    }
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsNotEmpty)({ groups: [Resources_1.EResourceType.TWEET_SEARCH] }),
        (0, class_validator_1.IsObject)({ groups: [Resources_1.EResourceType.TWEET_SEARCH] }),
        __metadata("design:type", TweetFilter_1.TweetFilter)
    ], FetchArgs.prototype, "filter", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsNotEmpty)({
            groups: [
                Resources_1.EResourceType.LIST_DETAILS,
                Resources_1.EResourceType.LIST_TWEETS,
                Resources_1.EResourceType.TWEET_DETAILS,
                Resources_1.EResourceType.TWEET_FAVORITERS,
                Resources_1.EResourceType.TWEET_RETWEETERS,
                Resources_1.EResourceType.USER_DETAILS,
                Resources_1.EResourceType.USER_DETAILS_BY_ID,
                Resources_1.EResourceType.USER_FOLLOWERS,
                Resources_1.EResourceType.USER_FOLLOWING,
                Resources_1.EResourceType.USER_LIKES,
                Resources_1.EResourceType.USER_TWEETS,
                Resources_1.EResourceType.USER_TWEETS_AND_REPLIES,
                Resources_1.EResourceType.SPACE_DETAILS_BY_ID,
                Resources_1.EResourceType.VIDEO_STREAM,
            ],
        }),
        (0, class_validator_1.IsNumberString)(undefined, {
            groups: [
                Resources_1.EResourceType.LIST_DETAILS,
                Resources_1.EResourceType.LIST_TWEETS,
                Resources_1.EResourceType.TWEET_DETAILS,
                Resources_1.EResourceType.TWEET_FAVORITERS,
                Resources_1.EResourceType.TWEET_RETWEETERS,
                Resources_1.EResourceType.USER_DETAILS_BY_ID,
                Resources_1.EResourceType.USER_FOLLOWERS,
                Resources_1.EResourceType.USER_FOLLOWING,
                Resources_1.EResourceType.USER_LIKES,
                Resources_1.EResourceType.USER_TWEETS,
                Resources_1.EResourceType.USER_TWEETS_AND_REPLIES,
            ],
        }),
        (0, class_validator_1.IsString)({
            groups: [Resources_1.EResourceType.SPACE_DETAILS_BY_ID, Resources_1.EResourceType.VIDEO_STREAM],
        }),
        __metadata("design:type", String)
    ], FetchArgs.prototype, "id", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.Max)(100, {
            groups: [
                Resources_1.EResourceType.LIST_TWEETS,
                Resources_1.EResourceType.TWEET_FAVORITERS,
                Resources_1.EResourceType.TWEET_RETWEETERS,
                Resources_1.EResourceType.USER_FOLLOWERS,
                Resources_1.EResourceType.USER_FOLLOWING,
                Resources_1.EResourceType.USER_LIKES,
            ],
        }),
        (0, class_validator_1.Max)(20, {
            groups: [Resources_1.EResourceType.TWEET_SEARCH, Resources_1.EResourceType.USER_TWEETS, Resources_1.EResourceType.USER_TWEETS_AND_REPLIES],
        }),
        __metadata("design:type", Number)
    ], FetchArgs.prototype, "count", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsString)(),
        __metadata("design:type", String)
    ], FetchArgs.prototype, "cursor", void 0);
    return FetchArgs;
}());
//# sourceMappingURL=FetchArgs.js.map