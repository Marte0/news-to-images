import { FetchArgs } from '../args/FetchArgs';
import { PostArgs, MediaArgs } from '../args/PostArgs';
import { EResourceType } from '../../enums/Resources';
/**
 * Mandatory variables that must be sent as a URL-encoded, stringified-JSON.
 *
 * @public
 */
export declare class Variables {
    id?: string;
    tweetId?: string;
    tweet_id?: string;
    userId?: string;
    listId?: string;
    screen_name?: string;
    count?: number;
    cursor?: string;
    controller_data?: string;
    rawQuery?: string;
    tweet_text?: string;
    media?: MediaVariable;
    reply?: ReplyVariable;
    product?: string;
    includePromotedContent?: boolean;
    isMetatagsQuery?: boolean;
    withVoice?: boolean;
    withCommunity?: boolean;
    withReplays?: boolean;
    withListeners?: boolean;
    /**
     * @param resourceType - The type of resource that is requested.
     * @param args - The additional user-defined arguments for fetching the resource.
     */
    constructor(resourceType: EResourceType, args: FetchArgs & PostArgs);
    /**
     * @returns The string representation of 'this' object.
     */
    toString(): string;
}
/**
 * Media to be sent as payload.
 *
 * @public
 */
export declare class MediaVariable {
    media_entities: MediaEntityVariable[];
    possibly_sensitive: boolean;
    /**
     * @param media - The list of MediaArgs objects specifying the media items to be sent in the Tweet.
     */
    constructor(media: MediaArgs[]);
}
/**
 * Each media item in the media payload.
 *
 * @public
 */
export declare class MediaEntityVariable {
    media_id: string;
    tagged_users: string[];
    /**
     * @param media - The MediaArgs object specifying the details of the media item to be included in the payload.
     */
    constructor(media: MediaArgs);
}
/**
 * Reply specific details to be sent in payload.
 *
 * @public
 */
export declare class ReplyVariable {
    in_reply_to_tweet_id: string;
    exclude_reply_user_ids: string[];
    /**
     * @param replyTo - The id of the Tweet to which this Tweet is a reply.
     */
    constructor(replyTo: string);
}
