import { EResourceType } from '../../enums/Resources';
import { EUploadSteps } from '../../enums/Request';
/**
 * User set query parameters that are used to specify the data that is to be posted.
 *
 * @public
 */
export declare class PostArgs {
    /** The id of the target resource. */
    id?: string;
    /** The tweet that is to be posted. */
    tweet?: TweetArgs;
    /** The media file to be uploaded. */
    upload?: UploadArgs;
    /**
     * @param resourceType - The type of resource that is targeted.
     * @param args - The additional user-defined arguments for posting the resource.
     */
    constructor(resourceType: EResourceType, args: PostArgs);
}
/**
 * User set query parameters that are used to specify the tweet that is to be posted.
 *
 * @public
 */
export declare class TweetArgs {
    /**
     * The text for the tweet to be created.
     *
     * @remarks
     * Length of the tweet must be \<= 280 characters.
     */
    text: string;
    /**
     * The list of media to be uploaded.
     *
     * @remarks
     * - The media first needs to be uploaded using the {@link EResourceType.MEDIA_UPLOAD} resource.
     * - After uploading, the returned id(s) can be used to reference the media here.
     * - Maximum number of media items that can be posted is 4.
     */
    media?: MediaArgs[];
    /** The id of the Tweet to which the given Tweet must be a reply. */
    replyTo?: string;
    /**
     * @param args - The additional user-defined arguments for posting the resource.
     */
    constructor(args: TweetArgs);
}
/**
 * User set query parameters that are used to specify the details of the media to be uploaded.
 *
 * @public
 */
export declare class MediaArgs {
    /** The id of the media to upload. */
    id: string;
    /**
     * The list of id of the users tagged in the media.
     *
     * @remarks
     * Maximum number of users that can be tagged is 10.
     */
    tags?: string[];
    /**
     * @param args - The media arguments specifying the media.
     */
    constructor(args: MediaArgs);
}
/**
 * User set query parameters that are used while uploading a media file.
 *
 * @public
 */
export declare class UploadArgs {
    /** The name of the step of the upload process to be executed. */
    step: EUploadSteps;
    /**
     * The size (in bytes) of the media file to be uploaded.
     *
     * @remarks The size must be \<= 5242880 bytes.
     */
    size?: number;
    /** The media file to be uploaded. */
    media?: string;
    /** The id allocated to the media file to be uploaded. */
    id?: string;
    /**
     * @param args - The upload arguments for uploading the media file.
     */
    constructor(args: UploadArgs);
}
