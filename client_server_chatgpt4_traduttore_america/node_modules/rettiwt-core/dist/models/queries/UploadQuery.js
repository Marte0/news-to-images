"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadQuery = void 0;
// MODELS
var BaseQuery_1 = require("./BaseQuery");
// TYPES
var Request_1 = require("../../enums/Request");
/**
 * URL query parameters required while uploading a media file to Twitter.
 *
 * @public
 */
var UploadQuery = /** @class */ (function (_super) {
    __extends(UploadQuery, _super);
    /* eslint-enable @typescript-eslint/naming-convention */
    /**
     * @param step - The step of the upload process to be executed.
     */
    function UploadQuery(args) {
        var _this = _super.call(this) || this;
        _this.command = args.step;
        // Initializing based on the upload sted
        if (args.step == Request_1.EUploadSteps.INITIALIZE) {
            _this.total_bytes = args.size;
        }
        else if (args.step == Request_1.EUploadSteps.APPEND) {
            _this.media_id = args.id;
            _this.segment_index = 0;
        }
        else {
            _this.media_id = args.id;
        }
        return _this;
    }
    return UploadQuery;
}(BaseQuery_1.BaseQuery));
exports.UploadQuery = UploadQuery;
//# sourceMappingURL=UploadQuery.js.map